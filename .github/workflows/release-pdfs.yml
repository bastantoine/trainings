name: Build presentations

on:
  push:
    tags:
      - "*"
    paths:
      - "git-advanced/presentation/content/*.md"
      - "gitlab-ci/presentation/content/**.md"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  merge-source-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup environment
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
      - name: Install dependencies
        working-directory: tools/merge
        run: poetry install
      - name: Merge source files
        working-directory: tools/merge
        run: |
          poetry run python merge.py ../../git-advanced/presentation/config.json
          poetry run python merge.py ../../gitlab-ci/presentation/config.json
      - name: Store merged files
        uses: actions/upload-artifact@v4
        with:
          name: merged-files
          retention-days: 1
          path: |
            git-advanced/presentation/content/output/git-advanced.md
            gitlab-ci/presentation/jour-1/output/gitlab-ci-jour-1.md
            gitlab-ci/presentation/jour-2/output/gitlab-ci-jour-2.md

  build-pdf:
    runs-on: ubuntu-latest
    needs: merge-source-files
    steps:
      - uses: actions/checkout@v4
      - name: Get Marp CLI
        uses: robinraju/release-downloader@v1.10
        with:
          repository: "marp-team/marp-cli"
          fileName: "marp-cli-*-linux.tar.gz"
          latest: true
          extract: true
      - name: Download merged files
        uses: actions/download-artifact@v4
        with:
          name: merged-files
      - name: Generate PDF files
        run: |
          ./marp -I git-advanced/presentation/content/output --allow-local-files --pdf
          ./marp -I gitlab-ci/presentation/jour-1/output --allow-local-files --pdf
          ./marp -I gitlab-ci/presentation/jour-2/output --allow-local-files --pdf
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdfs
          retention-days: 1
          path: |
            git-advanced/presentation/content/output/git-advanced.pdf
            gitlab-ci/presentation/jour-1/output/gitlab-ci-jour-1.pdf
            gitlab-ci/presentation/jour-2/output/gitlab-ci-jour-2.pdf

  deploy-pages:
    runs-on: ubuntu-latest
    needs: build-pdf
    steps:
      - name: Download built PDFs
        uses: actions/download-artifact@v4
        with:
          name: generated-pdfs
      - name: Release generated PDF
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref_name }}
        run: |
          - gh release create $VERSION \
              'git-advanced/presentation/content/output/git-advanced.pdf#Git advanced.pdf' \
              'gitlab-ci/presentation/jour-1/output/gitlab-ci-jour-1.pdf#Gitlab CI - Jour 1.pdf' \
              'gitlab-ci/presentation/jour-2/output/gitlab-ci-jour-2.pdf#Gitlab CI - Jour 2.pdf' \
